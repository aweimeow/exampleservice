- name: wait for public network interface up
  shell: ifconfig | grep -Eo "inet addr:{{PUBLIC_NETWORK_PATTERN}}" | grep -Eo "([0-9]{1,3}\.){3}[0-9]{1,3}"
  register: HOST_DEFAULT_IP
  until: HOST_DEFAULT_IP.stdout != ""
  retries: 200 
  delay: 3

- name: find out default routes
  shell: ip route | grep default | awk '{print $3}'
  register: DEFAULT_ROUTES

- name: remove all default routes
  shell: route del default gw {{item}}
  with_items: "{{DEFAULT_ROUTES.stdout_lines}}"

- name: add default route {{PUBLIC_NETWORK_DEFAULT_GW}}
  shell: route add default gw {{PUBLIC_NETWORK_DEFAULT_GW}}

- name: get default route interface name
  shell: ip route | grep default | awk '{print $5}'
  register: HOST_DEFAULT_INTERFACE

# - name: find out current component type
#   shell: cat ~/.oai_component_type
#   register: OAI_COMPONENT_TYPE

# - name: set target service into fact
#   set_fact:
#     TARGET_SERVICE: "{{OAI_COMPONENT_TYPE.stdout}}"

- name: find out default mask
  shell: ip route | grep -E "^{{PUBLIC_NETWORK_PATTERN}}" | awk '{print $1}' | grep -Eo "/[0-9]+"
  register: DEFAULT_IP_MASK

- name: set oai component masks
  set_fact:
    HSS_IP_MASK:  "{{DEFAULT_IP_MASK.stdout}}"
    MME_IP_MASK:  "{{DEFAULT_IP_MASK.stdout}}"
    SPGW_IP_MASK: "{{DEFAULT_IP_MASK.stdout}}"

- name: set current ip into fact
  set_fact: 
    cip: "{{HOST_DEFAULT_IP.stdout}}"

- name: set fact of ip if current host is hss
  set_fact: 
    HSS_IP:  "{{cip}}"
    MME_IP:  "{{cip.split('.')[0]}}.{{cip.split('.')[1]}}.{{cip.split('.')[2]}}.{{(cip.split('.')[3]|int)+2}}"
    SPGW_IP: "{{cip.split('.')[0]}}.{{cip.split('.')[1]}}.{{cip.split('.')[2]}}.{{(cip.split('.')[3]|int)+1}}"
  when: TARGET_SERVICE == "hss"

- name: set fact of ip if current host is mme
  set_fact: 
    HSS_IP:  "{{cip.split('.')[0]}}.{{cip.split('.')[1]}}.{{cip.split('.')[2]}}.{{(cip.split('.')[3]|int)-2}}"
    MME_IP:  "{{cip}}"
    SPGW_IP: "{{cip.split('.')[0]}}.{{cip.split('.')[1]}}.{{cip.split('.')[2]}}.{{(cip.split('.')[3]|int)-1}}"
  when: TARGET_SERVICE == "mme"

- name: set fact of ip if current host is spgw
  set_fact: 
    HSS_IP:  "{{cip.split('.')[0]}}.{{cip.split('.')[1]}}.{{cip.split('.')[2]}}.{{(cip.split('.')[3]|int)-1}}"
    MME_IP:  "{{cip.split('.')[0]}}.{{cip.split('.')[1]}}.{{cip.split('.')[2]}}.{{(cip.split('.')[3]|int)+1}}"
    SPGW_IP: "{{cip}}"
  when: TARGET_SERVICE == "spgw"

- name: set oai component interfaces
  set_fact:
    HSS_INTERFACE: "{{HOST_DEFAULT_INTERFACE.stdout}}"
    MME_INTERFACE: "{{HOST_DEFAULT_INTERFACE.stdout}}"
    SPGW_INTERNAL_INTERFACE: "{{HOST_DEFAULT_INTERFACE.stdout}}"
    SPGW_EXTERNAL_INTERFACE: "{{HOST_DEFAULT_INTERFACE.stdout}}"

- name: show gathered variables
  debug: 
    msg: 
      - "HSS_IP: {{HSS_IP}}"
      - "SPGW_IP: {{SPGW_IP}}"
      - "MME_IP: {{MME_IP}}"
      - "INTERFACE: {{HSS_INTERFACE}}"
      - "MASK: {{HSS_IP_MASK}}"
      - "TARGET_SERVICE: {{TARGET_SERVICE}}"